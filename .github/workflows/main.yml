name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PORT: ${{ secrets.PORT }}
  CORS_DOMAIN: ${{ secrets.CORS_DOMAIN }}

jobs:
  build:
    name: ${{ matrix.label }} - ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        go: ["1.14", "1.15", "1.16"]
        include:
          - os: macos-latest
            label: 'Mac'
          - os: ubuntu-latest
            label: 'Linux'
          - os: windows-latest
            label: 'Windows'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v ./...

      - name: Unit tests
        run: go test -v ./...

  publish:
    name: Publish container image
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      REGISTRY_USER: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_NAME: ghcr.io/${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: OCI image meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.event.repository.name }}
          tags: |
            type=edge,branch=main

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ github.event.repository.name }}
          tags: ${{ steps.meta.outputs.tags }}
          dockerfiles: |
            ./Dockerfile
          extra-args: |
            ${{ steps.meta.outputs.labels }}

      - name: Push to ghcr.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy
    needs: publish
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ github.event.repository.name }}
          docker_options: "-t ${{ steps.prep.outputs.tags }}"
          dockerfile_directory: ./
